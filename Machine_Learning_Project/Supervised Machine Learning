import numpy as  np 
import matplotlib.pyplot as plt  



# let make a data table containing column size(1000 sqft), Price(1000s of dollars) 

x_train = np.array([1, 2,3]) #<--- our training length is 3 for our example 
y_train = np.array([300, 500,800])  
print(f"x_train = {x_train}")
print(f"y_train = {y_train}")


# compute gradient 

def compute_gradient(x,y,w,b): 
  """
  x : Data, m examples 
  y : target value 
  w,b : parameter

  """
  m = len(x)
  print(m)
  dj_dw = 0 
  dj_db = 0 
  
  for i in range(m): 
    f_wb = w * x[i] + b
    dj_dw_i = (f_wb - y[i]) * x[i]
    print(dj_dw_i)
    dj_db_i = (f_wb - y[i])
    dj_dw += dj_dw_i
    dj_db += dj_db_i
    
  dj_dw = dj_dw / m 
  print(dj_dw)
  dj_db = dj_db / m
  return dj_dw, dj_db 


compute_gradient(x_train,y_train,0,0)
        
  
